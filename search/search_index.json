{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"AWS Organizations Policies","text":""},{"location":"index.html#scp-service-control-policies","title":"SCP - Service Control Policies","text":""},{"location":"index.html#about","title":"About","text":"<p>AWS Service Control Policies (SCPs) are a feature of the AWS Organizations service.</p> <p>This feature is responsible for access control, restricting the actions that can be taken in an AWS account so that all IAM users and roles, including the root user, cannot perform them.</p> <p>This allows you to centrally manage permissions across AWS accounts, enforcing security, compliance, and governance at an organizational level.</p>"},{"location":"index.html#examples","title":"Examples","text":"<ul> <li>Protect security services</li> <li>Require EC2 IMDSv2</li> <li>Deny ability to leave Organization</li> <li>Deny sharing of resources outside of the organization using AWS RAM</li> <li>Prevent IAM credencials lake</li> <li>Prevent account takeover risk</li> <li>Restrict AWS region access</li> <li>Deny account region modification</li> <li>Prevent critical IAM actions</li> <li>Deny ability to modify an important IAM role</li> <li>Deny root user access</li> <li>Protect default security settings</li> <li>Prevent public resource via policy</li> </ul>"},{"location":"index.html#tips","title":"Tips","text":"<ul> <li>Create multiple Organizational Units (OUs) instead of attaching all SCPs to the root of your organization. This approach allows for more granular restrictions and increases the number of SCPs you can attach, due to quota limits.</li> <li>Each Organizational Unit (OU) can have up to 5 SCPs attached. To avoid hitting this limit, consider combining multiple policies into a single SCP where possible.</li> <li>Refine your SCPs and restrict access to only the necessary AWS services using least privilege concept. Keep in mind that Root user accounts are affected by SCPs.</li> <li>The default SCP is <code>FullAWSAccess</code>, which allows all actions. Use this as a base and then apply additional SCPs to restrict access as needed.</li> <li>Unlike IAM policies, SCPs count whitespace towards the character limit. Be mindful of this when writing policies to ensure they stay within the size constraints.</li> <li>Always test your SCPs in a non-production environment to understand their impact before applying them broadly.</li> </ul>"},{"location":"index.html#quotas","title":"Quotas","text":"Value Quota Maximum SCP attached to root 5 Maximum SCP attached per OU 5 Maximum SCP attached per account 5 Maximum size of a policy document 5120 characters"},{"location":"aws-scp-examples.html","title":"AWS SPC Examples","text":""},{"location":"aws-scp-examples.html#protect-security-services","title":"Protect security services","text":"<p>Once you have configured an AWS account to meet a security baseline, you will want to ensure your configuration cannot be modified by anyone.</p> <ul> <li>Deny any actions that could deletes of CloudTrail logs to ensure audit trails are preserved.</li> <li>Deny any actions that could disrupt AWS Config to maintain consistent settings.</li> <li>Deny any actions that could disrupt GuardDuty.</li> <li>Deny any actions that could disrupt Security Hub.</li> <li>Deny any actions that could disrupt Access Analyzer.</li> <li>Deny any actions that could disrupt Macie.</li> <li>Deny any actions that could disrupt EventBridge rules that generate important alerts.</li> </ul> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"PreventCloudTrailModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"cloudtrail:DeleteTrail\",\n        \"cloudtrail:PutEventSelectors\",\n        \"cloudtrail:StopLogging\",\n        \"cloudtrail:UpdateTrail\",\n        \"cloudtrail:CreateTrail\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventConfigModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"config:DeleteAggregationAuthorization\",\n        \"config:DeleteConfigurationRecorder\",\n        \"config:DeleteDeliveryChannel\",\n        \"config:DeleteRetentionConfiguration\",\n        \"config:PutConfigurationRecorder\",\n        \"config:PutDeliveryChannel\",\n        \"config:PutRetentionConfiguration\",\n        \"config:StopConfigurationRecorder\",\n        \"config:PutConfigRule\",\n        \"config:DeleteConfigRule\",\n        \"config:DeleteEvaluationResults\",\n        \"config:DeleteConfigurationAggregator\",\n        \"config:PutConfigurationAggregator\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventGuardDutyModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"guardduty:AcceptInvitation\",\n        \"guardduty:ArchiveFindings\",\n        \"guardduty:CreateDetector\",\n        \"guardduty:CreateFilter\",\n        \"guardduty:CreateIPSet\",\n        \"guardduty:CreateMembers\",\n        \"guardduty:CreatePublishingDestination\",\n        \"guardduty:CreateSampleFindings\",\n        \"guardduty:CreateThreatIntelSet\",\n        \"guardduty:DeclineInvitations\",\n        \"guardduty:DeleteDetector\",\n        \"guardduty:DeleteFilter\",\n        \"guardduty:DeleteInvitations\",\n        \"guardduty:DeleteIPSet\",\n        \"guardduty:DeleteMembers\",\n        \"guardduty:DeletePublishingDestination\",\n        \"guardduty:DeleteThreatIntelSet\",\n        \"guardduty:DisassociateFromMasterAccount\",\n        \"guardduty:DisassociateMembers\",\n        \"guardduty:InviteMembers\",\n        \"guardduty:StartMonitoringMembers\",\n        \"guardduty:StopMonitoringMembers\",\n        \"guardduty:TagResource\",\n        \"guardduty:UnarchiveFindings\",\n        \"guardduty:UntagResource\",\n        \"guardduty:UpdateDetector\",\n        \"guardduty:UpdateFilter\",\n        \"guardduty:UpdateFindingsFeedback\",\n        \"guardduty:UpdateIPSet\",\n        \"guardduty:UpdatePublishingDestination\",\n        \"guardduty:UpdateThreatIntelSet\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventSecurityHubModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"securityhub:DeleteInvitations\",\n        \"securityhub:DisableSecurityHub\",\n        \"securityhub:DisassociateFromMasterAccount\",\n        \"securityhub:DeleteMembers\",\n        \"securityhub:DisassociateMembers\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventAccessAnalyzerModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"access-analyzer:DeleteAnalyzer\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventMacieModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"macie2:DisassociateFromMasterAccount\",\n        \"macie2:DisableOrganizationAdminAccount\",\n        \"macie2:DisableMacie\",\n        \"macie2:DeleteMember\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventEventBridgeModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"events:DeleteRule\",\n        \"events:DisableRule\",\n        \"events:RemoveTargets\"\n      ],\n      \"Resource\": \"arn:aws:events:*:*:rule/default/IMPORTANT-RULE\"\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#require-ec2-imdsv2","title":"Require EC2 IMDSv2","text":"<p>The following policy restricts all users from launching EC2 instances without IMDSv2 but allows specific IAM identities to modify instance metadata options.</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"ec2:MetadataHttpTokens\": \"required\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:RunInstances\",\n      \"Resource\": \"arn:aws:ec2:*:*:instance/*\",\n      \"Condition\": {\n        \"NumericGreaterThan\": {\n          \"ec2:MetadataHttpPutResponseHopLimit\": \"3\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"*\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"NumericLessThan\": {\n          \"ec2:RoleDelivery\": \"2.0\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"ec2:ModifyInstanceMetadataOptions\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringNotLike\": {\n          \"aws:PrincipalARN\": [\n            \"arn:aws:iam::{ACCOUNT_ID}:{RESOURCE_TYPE}/{RESOURCE_NAME}\"\n          ]\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#deny-ability-to-leave-organization","title":"Deny ability to leave Organization","text":"<p>The following policy avoid having the accounts simply leave your organization where they would no longer be restricted by your SCP.</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"organizations:LeaveOrganization\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#deny-sharing-of-resources-outside-of-the-organization-using-aws-ram","title":"Deny sharing of resources outside of the organization using AWS RAM","text":"<p>The following policy avoid having the accounts simply leave your organization where they would no longer be restricted by your SCP. The following example SCP prevents users from creating resource shares that allow sharing with IAM users and roles that aren't part of the organization.</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"ram:CreateResourceShare\",\n        \"ram:UpdateResourceShare\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"ram:RequestedAllowsExternalPrincipals\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"ram:AcceptResourceShareInvitation\",\n        \"ram:AssociateResourceShare\",\n        \"ram:CreateResourceShare\",\n        \"ram:DeleteResourceShare\",\n        \"ram:DisassociateResourceShare\",\n        \"ram:RejectResourceShareInvitation\",\n        \"ram:TagResource\",\n        \"ram:UntagResource\",\n        \"ram:UpdateResourceShare\",\n        \"ram:EnableSharingWithAwsOrganization\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:PrincipalOrgID\": \"o-1234567890\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#prevent-iam-credencials-lake","title":"Prevent IAM credencials lake","text":"<p>API keys of AWS IAM users are often used when on-prem systems need to connect to your AWS environment. They are difficult to replace (you need some form of secret on the client side, also if you use IAM Roles Anywhere). Yet, leaked API keys are a frequent cause of compromised AWS accounts. To reduce the usefulness of API keys to unauthorized parties, consider restricting their validity to known IP ranges. You can also put this restriction into SCPs. If you only ever expect your on-prem networks to use IAM user access keys</p> <p>This is an underrated strategy. IP whitelisting reduces the probability of getting breaches, despite credential leak. </p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"DenyChangingContactInfo\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"*\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:PrincipalType\": \"User\"\n        },\n        \"NotIpAddress\": {\n          \"aws:SourceIp\": [\n            \"210.0.112.0/24\",\n            \"208.0.120.0/24\"\n          ]\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#prevent-account-takeover-risk","title":"Prevent account takeover risk","text":"<p>The following policy avoid account takeover.</p> <p>You should have the contact information for your accounts set to approved phone numbers and other values.</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"DenyChangingContactInfo\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"account:PutAlternateContact\",\n        \"account:PuContactInformation\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#restrict-aws-region-access","title":"Restrict AWS region access","text":"<p>Deny access to AWS services in regions that are not approved for use.</p> <p>Oficial AWS example.</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"DenyAllOutsideEU\",\n      \"Effect\": \"Deny\",\n      \"NotAction\": [\n        \"a4b:*\",\n        \"acm:*\",\n        \"aws-marketplace-management:*\",\n        \"aws-marketplace:*\",\n        \"aws-portal:*\",\n        \"budgets:*\",\n        \"ce:*\",\n        \"chime:*\",\n        \"cloudfront:*\",\n        \"config:*\",\n        \"cur:*\",\n        \"directconnect:*\",\n        \"ec2:DescribeRegions\",\n        \"ec2:DescribeTransitGateways\",\n        \"ec2:DescribeVpnGateways\",\n        \"fms:*\",\n        \"globalaccelerator:*\",\n        \"health:*\",\n        \"iam:*\",\n        \"importexport:*\",\n        \"kms:*\",\n        \"mobileanalytics:*\",\n        \"networkmanager:*\",\n        \"organizations:*\",\n        \"pricing:*\",\n        \"route53:*\",\n        \"route53domains:*\",\n        \"route53-recovery-cluster:*\",\n        \"route53-recovery-control-config:*\",\n        \"route53-recovery-readiness:*\",\n        \"s3:GetAccountPublic*\",\n        \"s3:ListAllMyBuckets\",\n        \"s3:ListMultiRegionAccessPoints\",\n        \"s3:PutAccountPublic*\",\n        \"shield:*\",\n        \"sts:*\",\n        \"support:*\",\n        \"trustedadvisor:*\",\n        \"waf-regional:*\",\n        \"waf:*\",\n        \"wafv2:*\",\n        \"wellarchitected:*\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:RequestedRegion\": [\n            \"eu-central-1\",\n            \"eu-west-1\"\n          ]\n        },\n        \"ArnNotLike\": {\n          \"aws:PrincipalARN\": [\n            \"arn:aws:iam::*:role/Role1AllowedToBypassThisSCP\",\n            \"arn:aws:iam::*:role/Role2AllowedToBypassThisSCP\"\n          ]\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#deny-account-region-modification","title":"Deny account region modification","text":"<pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"PreventAccountRegionChanges\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"account:EnableRegion\",\n        \"account:DisableRegion\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Condition\": {\n        \"StringNotLike\": {\n          \"aws:PrincipalArn\": [\n            \"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_AdministratorAccess*\",\n            \"arn:aws:iam::*:role/OrganizationAccountAccessRole\"\n          ]\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#prevent-critical-iam-actions","title":"Prevent critical IAM actions","text":"<ul> <li>Deny creation of access keys for the root user</li> <li>Deny creation of any access keys except security team</li> <li>Deny update IAM password policy except security team</li> </ul> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    { \n      \"Sid\": \"DenyCreateRootUserAccessKey\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"iam:CreateAccessKey\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:PrincipalArn\": [\n            \"arn:aws:iam::*:root\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"iam:CreateUser\",\n        \"iam:CreateAccessKey\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:PrincipalARN\": [\n            \"arn:aws:iam::*:role/AUDIT-ROLE-NAME\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"iam:DeleteAccountPasswordPolicy\",\n        \"iam:UpdateAccountPasswordPolicy\"\n      ],\n      \"Resource\": [\n        \"*\"\n      ],\n      \"Condition\": {\n        \"StringNotEquals\": {\n          \"aws:PrincipalARN\": [\n            \"arn:aws:iam::*:role/AUDIT-ROLE-NAME\"\n          ]\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#deny-ability-to-modify-an-important-iam-role","title":"Deny ability to modify an important IAM role","text":"<p>This policy restricts IAM users and roles from making changes to the specified IAM role that can be used to deny modifications of an incident response or other security auditing role.</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"DenyCriticalRoleModification\",\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"iam:AttachRolePolicy\",\n        \"iam:DeleteRole\",\n        \"iam:DeleteRolePermissionsBoundary\",\n        \"iam:DeleteRolePolicy\",\n        \"iam:DetachRolePolicy\",\n        \"iam:PutRolePermissionsBoundary\",\n        \"iam:PutRolePolicy\",\n        \"iam:UpdateAssumeRolePolicy\",\n        \"iam:UpdateRole\",\n        \"iam:UpdateRoleDescription\"\n      ],\n      \"Resource\": [\n        \"arn:aws:iam::*:role/AUDIT-ROLE-NAME\",\n        \"arn:aws:iam::*:role/OrganizationAccountAccessRole\",\n        \"arn:aws:iam::*:role/stacksets-exec-*\",\n        \"arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO*\"\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#deny-root-user-access","title":"Deny root user access","text":"<p>To disallowing account access with root user credentials due to the difficulty of understanding what person was involved in an action if they authenticate with the root users because it has privelege access by default.</p> <ul> <li>Advantages:<ul> <li>It mitigates the concerns on AWS around password recovery such account take-over risk that can happen with Root users</li> <li>There isn\u2019t a need to set up a multi-factor device for the user</li> </ul> </li> </ul> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": {\n    \"Sid\": \"DenyRootUser\",\n    \"Effect\": \"Deny\",\n    \"Action\": \"*\",\n    \"Resource\": \"*\",\n    \"Condition\": {\n      \"StringLike\": {\n        \"aws:PrincipalArn\": \"arn:aws:iam::*:root\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"aws-scp-examples.html#protect-default-security-settings","title":"Protect default security settings","text":"<p>The following policy restricts all users from disabling the default Amazon EBS Encryption.</p> <p>The following SCP protects some important security settings from being turned off. None of these features are enabled by default and should be enabled as part of your initial account baseline. These features are</p> <ul> <li>Prevent disabling of default Amazon EBS encryption</li> <li>Access Analyzer: A service for identifying when resources are made public or granted access to untrusted accounts.</li> <li>Default EBS encryption: This encrypts the virtual hard-drives of your EC2s by default.</li> <li>S3 Block Public Access: Denies S3 buckets from being made public.</li> </ul> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"ec2:DisableEbsEncryptionByDefault\",\n        \"access-analyzer:DeleteAnalyzer\",\n        \"ec2:DisableEbsEncryptionByDefault\",\n        \"s3:PutAccountPublicAccessBlock\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}\n</code></pre>"},{"location":"aws-scp-examples.html#prevent-public-resource-via-policy","title":"Prevent public resource via policy","text":"<ul> <li>Prevent changes to bucket logging for your Amazon S3 buckets.</li> <li>Prevent changes to bucket policy for your Amazon S3 buckets</li> <li>Prevent uploading unencrypted objects to S3 buckets.</li> </ul> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": [\n        \"s3:PutBucketLogging\",\n        \"s3:PutBucketPolicy\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"PreventUnencryptedObject\",\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:PutObject\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"s3:x-amz-server-side-encryption\": \"true\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"}]}